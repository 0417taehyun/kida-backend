"""Add all tables

Revision ID: 3dc896cb9543
Revises: 26f5dced0068
Create Date: 2022-09-16 10:15:25.278703

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3dc896cb9543'
down_revision = '26f5dced0068'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.VARCHAR(length=4), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_location',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.VARCHAR(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_view',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('child_activity_like',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('is_visited', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['child_id'], ['child.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parent_activity_like',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('is_visited', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_diary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('emotion_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.VARCHAR(length=512), nullable=True),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child.id'], ),
    sa.ForeignKeyConstraint(['emotion_id'], ['emotion.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_diary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_activity_like_id', sa.Integer(), nullable=False),
    sa.Column('emotion_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['child_activity_like_id'], ['child_activity_like.id'], ),
    sa.ForeignKeyConstraint(['emotion_id'], ['emotion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_diary_reply',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diary_id'], ['question_diary.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_diary_reply',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('activity_diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['activity_diary_id'], ['activity_diary.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('activity', sa.Column('activity_category_id', sa.Integer(), nullable=False))
    op.add_column('activity', sa.Column('activity_location_id', sa.Integer(), nullable=False))
    op.add_column('activity', sa.Column('title', sa.VARCHAR(length=32), nullable=False))
    op.add_column('activity', sa.Column('payment', sa.Enum('COST', 'FREE', name='paymenttype'), nullable=False))
    op.add_column('activity', sa.Column('page_url', sa.VARCHAR(length=512), nullable=False))
    op.add_column('activity', sa.Column('place', sa.VARCHAR(length=16), nullable=True))
    op.add_column('activity', sa.Column('reservation_start_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('activity', sa.Column('reservation_end_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('activity', sa.Column('event_start_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('activity', sa.Column('event_end_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('activity', sa.Column('target', sa.VARCHAR(length=16), nullable=True))
    op.add_column('activity', sa.Column('image_url', sa.VARCHAR(length=512), nullable=True))
    op.add_column('activity', sa.Column('geo_location_x', sa.Float(), nullable=True))
    op.add_column('activity', sa.Column('geo_location_y', sa.Float(), nullable=True))
    op.create_foreign_key(None, 'activity', 'activity_category', ['activity_category_id'], ['id'])
    op.create_foreign_key(None, 'activity', 'activity_location', ['activity_location_id'], ['id'])
    op.alter_column('parent', 'invitation_code',
               existing_type=mysql.VARCHAR(length=8),
               nullable=True)
    op.alter_column('parent', 'invitation_code_expired_date',
               existing_type=mysql.DATETIME(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('parent', 'invitation_code_expired_date',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('parent', 'invitation_code',
               existing_type=mysql.VARCHAR(length=8),
               nullable=False)
    op.drop_constraint(None, 'activity', type_='foreignkey')
    op.drop_constraint(None, 'activity', type_='foreignkey')
    op.drop_column('activity', 'geo_location_y')
    op.drop_column('activity', 'geo_location_x')
    op.drop_column('activity', 'image_url')
    op.drop_column('activity', 'target')
    op.drop_column('activity', 'event_end_date')
    op.drop_column('activity', 'event_start_date')
    op.drop_column('activity', 'reservation_end_date')
    op.drop_column('activity', 'reservation_start_date')
    op.drop_column('activity', 'place')
    op.drop_column('activity', 'page_url')
    op.drop_column('activity', 'payment')
    op.drop_column('activity', 'title')
    op.drop_column('activity', 'activity_location_id')
    op.drop_column('activity', 'activity_category_id')
    op.drop_table('activity_diary_reply')
    op.drop_table('question_diary_reply')
    op.drop_table('activity_diary')
    op.drop_table('question_diary')
    op.drop_table('parent_activity_like')
    op.drop_table('child_activity_like')
    op.drop_table('activity_view')
    op.drop_table('activity_location')
    op.drop_table('activity_category')
    # ### end Alembic commands ###
