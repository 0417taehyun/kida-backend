"""Create tables

Revision ID: 5e53e203bfc3
Revises: 
Create Date: 2022-09-18 21:33:28.713852

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e53e203bfc3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.VARCHAR(length=4), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_location',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.VARCHAR(length=8), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_view',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('child',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account', sa.VARCHAR(length=16), nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), nullable=False),
    sa.Column('nickname', sa.VARCHAR(length=8), nullable=False),
    sa.Column('type', sa.Enum('FIRST', 'SECOND', 'THIRD', 'FORTH', 'FIFTH', 'SIXTH', 'SEVENTH', 'EIGTHTH', 'NINTH', 'TENTH', name='childtype'), nullable=False),
    sa.Column('nickname_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('character_name', sa.VARCHAR(length=8), nullable=False),
    sa.Column('character_name_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('invitation_code', sa.VARCHAR(length=8), nullable=True),
    sa.Column('invitation_code_expired_date', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account', name='account_unique_constraint'),
    sa.UniqueConstraint('nickname', name='nickname_unique_constraint')
    )
    op.create_table('diary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('type', sa.Enum('ACTIVITY', 'QUESTION', name='diarytype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('emotion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('type', sa.Enum('HAPPY', 'SURPRISED', 'ORDINARY', 'SAD', 'ANGRY', name='emotiontype'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('required_experience', sa.Enum('LEVEL_1', 'LEVEL_2', 'LEVEL_3', 'LEVEL_4', name='leveltype'), nullable=False),
    sa.Column('ordinary_character_image_url', sa.VARCHAR(length=1024), nullable=False),
    sa.Column('child_to_parent_character_image_url', sa.VARCHAR(length=1024), nullable=False),
    sa.Column('parent_to_child_character_image_url', sa.VARCHAR(length=1024), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parent',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('account', sa.VARCHAR(length=16), nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), nullable=False),
    sa.Column('nickname', sa.VARCHAR(length=8), nullable=False),
    sa.Column('type', sa.Enum('MOTHER', 'FATHER', name='parenttype'), nullable=False),
    sa.Column('nickname_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('invitation_code', sa.VARCHAR(length=8), nullable=True),
    sa.Column('invitation_code_expired_date', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account', name='account_unique_constraint'),
    sa.UniqueConstraint('nickname', name='nickname_unique_constraint')
    )
    op.create_table('question_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.VARCHAR(length=4), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('activity_category_id', sa.Integer(), nullable=False),
    sa.Column('activity_location_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=64), nullable=False),
    sa.Column('payment', sa.Enum('COST', 'FREE', name='paymenttype'), nullable=False),
    sa.Column('page_url', sa.VARCHAR(length=512), nullable=False),
    sa.Column('place', sa.VARCHAR(length=64), nullable=True),
    sa.Column('reservation_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reservation_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('event_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('target', sa.VARCHAR(length=64), nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=512), nullable=True),
    sa.Column('geo_location_x', sa.Float(), nullable=True),
    sa.Column('geo_location_y', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['activity_category_id'], ['activity_category.id'], ),
    sa.ForeignKeyConstraint(['activity_location_id'], ['activity_location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_diary_reply',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diary_id'], ['diary.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parent_child',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('invitation_code', sa.VARCHAR(length=8), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['level.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('question_category_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=64), nullable=False),
    sa.ForeignKeyConstraint(['question_category_id'], ['question_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_diary_reply',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=False),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['diary_id'], ['diary.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('child_activity_like',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('is_visited', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['child_id'], ['child.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('family',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_child_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=8), nullable=False),
    sa.ForeignKeyConstraint(['parent_child_id'], ['parent_child.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', name='family_name_unique_constraint')
    )
    op.create_table('parent_activity_like',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('is_visited', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parent.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_diary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('emotion_id', sa.Integer(), nullable=True),
    sa.Column('diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=True),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child.id'], ),
    sa.ForeignKeyConstraint(['diary_id'], ['diary.id'], ),
    sa.ForeignKeyConstraint(['emotion_id'], ['emotion.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_diary',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('child_activity_like_id', sa.Integer(), nullable=False),
    sa.Column('emotion_id', sa.Integer(), nullable=True),
    sa.Column('diary_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.VARCHAR(length=512), nullable=True),
    sa.Column('answered_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['child_activity_like_id'], ['child_activity_like.id'], ),
    sa.ForeignKeyConstraint(['diary_id'], ['diary.id'], ),
    sa.ForeignKeyConstraint(['emotion_id'], ['emotion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activity_diary')
    op.drop_table('question_diary')
    op.drop_table('parent_activity_like')
    op.drop_table('family')
    op.drop_table('child_activity_like')
    op.drop_table('question_diary_reply')
    op.drop_table('question')
    op.drop_table('parent_child')
    op.drop_table('activity_diary_reply')
    op.drop_table('activity')
    op.drop_table('question_category')
    op.drop_table('parent')
    op.drop_table('level')
    op.drop_table('emotion')
    op.drop_table('diary')
    op.drop_table('child')
    op.drop_table('activity_view')
    op.drop_table('activity_location')
    op.drop_table('activity_category')
    # ### end Alembic commands ###
